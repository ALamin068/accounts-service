version: '3.8'

services:
  # MySQL Database Service
  mysql:
    image: mysql:8.4
    container_name: ecommerce-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: accounts_db
      MYSQL_USER: app
      MYSQL_PASSWORD: app
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "app", "-papp"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ecommerce-network

  # E-Commerce REST API Service
  ecommerce-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-api-new
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/accounts_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=app
      - SPRING_DATASOURCE_PASSWORD=app
      - JWT_SECRET=${JWT_SECRET:-myVerySecretKeyForJWTTokenGenerationThatShouldBeAtLeast256BitsLongAndSecure}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400000}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_dummy_key_for_development}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY:-pk_test_dummy_key_for_development}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET:-whsec_dummy_secret_for_development}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: unless-stopped

  # Optional: Adminer for database management
  adminer:
    image: adminer:4.8.1
    container_name: ecommerce-adminer
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - ecommerce-network
    profiles:
      - admin

networks:
  ecommerce-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
